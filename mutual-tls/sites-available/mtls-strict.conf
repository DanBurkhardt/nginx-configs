# server requires mutual tls for all
server {
    # define ports to listen on
    listen 8006 ssl;

    # define the DNS name if reachable by hostname
    server_name localhost;

    # define logging
    access_log  /var/log/nginx/mtls-strict.access.log;
    error_log  /var/log/nginx/mtls-strict.error.log;

    # SSL cert and key
    ssl_certificate /etc/nginx/mtls/server.crt;
    ssl_certificate_key /etc/nginx/mtls/server.key;

    # Certificate Authority (CA) for client certificates
    ssl_client_certificate /etc/nginx/mtls/ca.crt;
    ssl_verify_client on; # this is the STRICT part, reqs verification ALWAYS
    ssl_verify_depth 10; # probably unnecessary depth, but ok

    # modern support for stronger
    # ECDSA alg & SSL/TLS extensions
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # optional custom handling of not-found / 40x, 50x error situations
    error_page 500 502 503 504 = @optional_error_redirect;
    location @optional_error_redirect {
        rewrite ^ $scheme://somedomain.com$is_args$args? permanent;
    }

    # Black-hole failed / missing client mTLS requests
    # 
    # this is a KEY portion: we are intercepting reqs without
    # a client certificate and black-holing them. No expectation
    # of response, in fact a denial exposes information about what 
    # this ingress controller exists for, and perhaps is an indication
    # of the value of whatever it is protecting.
    error_page 495 496 497 = @blackhole;
    location @blackhole {
        return 444;
    }

    # example specific 
    location /mtls-strict {
        add_header Content-Type text/plain;
        return 200 '\n\n\n****** mTLS security confirmed ********* \n\nnice work.';
    }
}